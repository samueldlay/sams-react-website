{"ast":null,"code":"const id = 'YOUR_CLIENT_ID';\nconst sec = 'YOUR-SECRET-ID';\nconst params = \"?client_id=\".concat(id, \"&&client_secret=\").concat(sec);\n\nasync function getProfile(username) {\n  const profile = await fetch(\"https://api.github.com/users/samueldlay\");\n  const response = await profile.json();\n\n  try {\n    if (response.message) {\n      throw new Error(response.message, username);\n    } else {\n      return response;\n    }\n  } catch (err) {\n    console.log('ERROR IN GETPROFILE: ', err);\n    return err;\n  }\n}\n\nasync function getRepos(username) {\n  const profile = await fetch(\"https://api.github.com/users/samueldlay/repos\");\n  const response = await profile.json();\n\n  try {\n    if (response.message) {\n      throw new Error(response.message);\n    } else {\n      return response;\n    }\n  } catch (err) {\n    console.log('ERROR IN GETREPOS: ', err);\n    return err;\n  }\n}\n\nfunction getStarCount(repos) {\n  return repos.reduce((count, {\n    stargazers_count\n  }) => count + stargazers_count, 0);\n}\n\nfunction calculateScore(followers, repos) {\n  return followers + getStarCount(repos);\n}\n\nexport default async function getUserData(username) {\n  const promiseAll = Promise.all([getProfile(username), getRepos(username)]);\n  const userData = await promiseAll.then(async ([profile, repos]) => {\n    if (repos.message || profile.message) {\n      return repos || profile;\n    }\n\n    return {\n      profile,\n      score: calculateScore(profile.followers, repos)\n    };\n  });\n  return userData;\n}","map":{"version":3,"sources":["/home/samueldlay/Documents/GitHub/react-website/src/githubapi.js"],"names":["id","sec","params","getProfile","username","profile","fetch","response","json","message","Error","err","console","log","getRepos","getStarCount","repos","reduce","count","stargazers_count","calculateScore","followers","getUserData","promiseAll","Promise","all","userData","then","score"],"mappings":"AAAA,MAAMA,EAAE,GAAG,gBAAX;AACA,MAAMC,GAAG,GAAG,gBAAZ;AACA,MAAMC,MAAM,wBAAiBF,EAAjB,6BAAsCC,GAAtC,CAAZ;;AAEA,eAAeE,UAAf,CAA2BC,QAA3B,EAAqC;AACnC,QAAMC,OAAO,GAAG,MAAMC,KAAK,2CAA3B;AACA,QAAMC,QAAQ,GAAG,MAAMF,OAAO,CAACG,IAAR,EAAvB;;AACA,MAAI;AACF,QAAID,QAAQ,CAACE,OAAb,EAAsB;AACpB,YAAM,IAAIC,KAAJ,CAAUH,QAAQ,CAACE,OAAnB,EAA4BL,QAA5B,CAAN;AACD,KAFD,MAEO;AACL,aAAOG,QAAP;AACD;AACF,GAND,CAOA,OAAOI,GAAP,EAAY;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqCF,GAArC;AACA,WAAOA,GAAP;AACD;AACF;;AAED,eAAeG,QAAf,CAAyBV,QAAzB,EAAmC;AACjC,QAAMC,OAAO,GAAG,MAAMC,KAAK,iDAA3B;AACA,QAAMC,QAAQ,GAAG,MAAMF,OAAO,CAACG,IAAR,EAAvB;;AACA,MAAI;AACF,QAAID,QAAQ,CAACE,OAAb,EAAsB;AACpB,YAAM,IAAIC,KAAJ,CAAUH,QAAQ,CAACE,OAAnB,CAAN;AACD,KAFD,MAEO;AACL,aAAOF,QAAP;AACD;AACF,GAND,CAOA,OAAOI,GAAP,EAAY;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCF,GAAnC;AACA,WAAOA,GAAP;AACD;AACF;;AAED,SAASI,YAAT,CAAsBC,KAAtB,EAA6B;AAC3B,SAAOA,KAAK,CAACC,MAAN,CAAa,CAACC,KAAD,EAAQ;AAACC,IAAAA;AAAD,GAAR,KAA+BD,KAAK,GAAGC,gBAApD,EAAsE,CAAtE,CAAP;AACD;;AAED,SAASC,cAAT,CAAyBC,SAAzB,EAAoCL,KAApC,EAA2C;AACzC,SAAOK,SAAS,GAAGN,YAAY,CAACC,KAAD,CAA/B;AACD;;AAED,eAAe,eAAeM,WAAf,CAA4BlB,QAA5B,EAAsC;AACnD,QAAMmB,UAAU,GAAGC,OAAO,CAACC,GAAR,CAAY,CAACtB,UAAU,CAACC,QAAD,CAAX,EAAuBU,QAAQ,CAACV,QAAD,CAA/B,CAAZ,CAAnB;AACA,QAAMsB,QAAQ,GAAG,MAAMH,UAAU,CAACI,IAAX,CAAgB,OAAO,CAACtB,OAAD,EAAUW,KAAV,CAAP,KAA4B;AACjE,QAAIA,KAAK,CAACP,OAAN,IAAiBJ,OAAO,CAACI,OAA7B,EAAsC;AACpC,aAAOO,KAAK,IAAIX,OAAhB;AACD;;AAED,WAAQ;AACRA,MAAAA,OADQ;AAERuB,MAAAA,KAAK,EAAER,cAAc,CAACf,OAAO,CAACgB,SAAT,EAAoBL,KAApB;AAFb,KAAR;AAIH,GATwB,CAAvB;AAUA,SAAOU,QAAP;AACD","sourcesContent":["const id = 'YOUR_CLIENT_ID';\nconst sec = 'YOUR-SECRET-ID';\nconst params = `?client_id=${id}&&client_secret=${sec}`;\n\nasync function getProfile (username) {\n  const profile = await fetch(`https://api.github.com/users/samueldlay`);\n  const response = await profile.json();\n  try {\n    if (response.message) {\n      throw new Error(response.message, username)\n    } else {\n      return response;\n    }\n  }\n  catch (err) {\n    console.log('ERROR IN GETPROFILE: ', err);\n    return err;\n  }\n}\n\nasync function getRepos (username) {\n  const profile = await fetch(`https://api.github.com/users/samueldlay/repos`);\n  const response = await profile.json();\n  try {\n    if (response.message) {\n      throw new Error(response.message)\n    } else {\n      return response;\n    }\n  }\n  catch (err) {\n    console.log('ERROR IN GETREPOS: ', err);\n    return err;\n  }\n}\n\nfunction getStarCount(repos) {\n  return repos.reduce((count, {stargazers_count}) => count + stargazers_count, 0)\n}\n\nfunction calculateScore (followers, repos) {\n  return followers + getStarCount(repos);\n}\n\nexport default async function getUserData (username) {\n  const promiseAll = Promise.all([getProfile(username), getRepos(username)]);\n  const userData = await promiseAll.then(async ([profile, repos]) => {\n    if (repos.message || profile.message) {\n      return repos || profile;\n    }\n    \n    return ({\n    profile,\n    score: calculateScore(profile.followers, repos)\n  })\n})\n  return userData;\n}"]},"metadata":{},"sourceType":"module"}