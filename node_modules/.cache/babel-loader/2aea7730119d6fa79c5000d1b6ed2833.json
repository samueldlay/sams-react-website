{"ast":null,"code":"var _jsxFileName = \"/home/samueldlay/Documents/GitHub/react-website/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Nav from './components/nav';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      display: true\n    };\n    this.animations = this.animations.bind(this);\n  }\n\n  animations() {\n    const menuButton = document.querySelector('.menu-btn');\n    const menu = document.querySelector('.menu');\n    const menuNav = document.querySelector('.menu-nav');\n    const menuBranding = document.querySelector('.menu-branding');\n    const navNodelist = document.querySelectorAll('.menu-item');\n    const links = document.querySelectorAll('.nav-link'); // Menu -- initial state\n\n    let displayMenu = false;\n    menuButton.addEventListener('click', function toggleMenu() {\n      if (!displayMenu) {\n        menuButton.classList.add('close');\n        menu.classList.add('display');\n        menuNav.classList.add('display');\n        menuBranding.classList.add('display');\n        navNodelist.forEach(item => {\n          item.classList.add('display');\n        });\n        links.forEach(link => {\n          link.onmouseover = () => link.textContent = \"{\".concat(link.textContent, \"}\");\n\n          link.onmouseout = () => {\n            link.textContent = link.textContent.slice(1, -1);\n          };\n        }); // set state of menu\n\n        displayMenu = true;\n      } else {\n        menuButton.classList.remove('close');\n        menu.classList.remove('display');\n        menuNav.classList.remove('display');\n        menuBranding.classList.remove('display');\n        navNodelist.forEach(item => item.classList.remove('display')); // set state of menu\n\n        displayMenu = false;\n      }\n    });\n  }\n\n  render() {\n    return React.createElement(Nav, {\n      animations: this.animations,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/samueldlay/Documents/GitHub/react-website/src/App.js"],"names":["React","Component","Nav","App","constructor","props","state","display","animations","bind","menuButton","document","querySelector","menu","menuNav","menuBranding","navNodelist","querySelectorAll","links","displayMenu","addEventListener","toggleMenu","classList","add","forEach","item","link","onmouseover","textContent","onmouseout","slice","remove","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,OAAOC,GAAP,MAAgB,kBAAhB;;AAEA,MAAMC,GAAN,SAAkBF,SAAlB,CAA4B;AAC1BG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE;AADE,KAAb;AAGA,SAAKC,UAAL,GAAkB,KAAKA,UAAL,CAAgBC,IAAhB,CAAqB,IAArB,CAAlB;AACD;;AAEDD,EAAAA,UAAU,GAAI;AACZ,UAAME,UAAU,GAAGC,QAAQ,CAACC,aAAT,CAAuB,WAAvB,CAAnB;AACJ,UAAMC,IAAI,GAAGF,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAAb;AACA,UAAME,OAAO,GAAGH,QAAQ,CAACC,aAAT,CAAuB,WAAvB,CAAhB;AACA,UAAMG,YAAY,GAAGJ,QAAQ,CAACC,aAAT,CAAuB,gBAAvB,CAArB;AACA,UAAMI,WAAW,GAAGL,QAAQ,CAACM,gBAAT,CAA0B,YAA1B,CAApB;AACA,UAAMC,KAAK,GAAGP,QAAQ,CAACM,gBAAT,CAA0B,WAA1B,CAAd,CANgB,CAOhB;;AAEA,QAAIE,WAAW,GAAG,KAAlB;AAIAT,IAAAA,UAAU,CAACU,gBAAX,CAA4B,OAA5B,EAAqC,SAASC,UAAT,GAAuB;AAC1D,UAAI,CAACF,WAAL,EAAkB;AAChBT,QAAAA,UAAU,CAACY,SAAX,CAAqBC,GAArB,CAAyB,OAAzB;AACAV,QAAAA,IAAI,CAACS,SAAL,CAAeC,GAAf,CAAmB,SAAnB;AACAT,QAAAA,OAAO,CAACQ,SAAR,CAAkBC,GAAlB,CAAsB,SAAtB;AACAR,QAAAA,YAAY,CAACO,SAAb,CAAuBC,GAAvB,CAA2B,SAA3B;AACAP,QAAAA,WAAW,CAACQ,OAAZ,CAAoBC,IAAI,IAAI;AAC1BA,UAAAA,IAAI,CAACH,SAAL,CAAeC,GAAf,CAAmB,SAAnB;AACH,SAFC;AAGAL,QAAAA,KAAK,CAACM,OAAN,CAAcE,IAAI,IAAI;AACpBA,UAAAA,IAAI,CAACC,WAAL,GAAmB,MAAMD,IAAI,CAACE,WAAL,cAAuBF,IAAI,CAACE,WAA5B,MAAzB;;AACAF,UAAAA,IAAI,CAACG,UAAL,GAAkB,MAAM;AACtBH,YAAAA,IAAI,CAACE,WAAL,GAAmBF,IAAI,CAACE,WAAL,CAAiBE,KAAjB,CAAuB,CAAvB,EAA0B,CAAC,CAA3B,CAAnB;AACD,WAFD;AAGD,SALD,EARgB,CAgBhB;;AAEAX,QAAAA,WAAW,GAAG,IAAd;AACD,OAnBD,MAmBO;AACLT,QAAAA,UAAU,CAACY,SAAX,CAAqBS,MAArB,CAA4B,OAA5B;AACAlB,QAAAA,IAAI,CAACS,SAAL,CAAeS,MAAf,CAAsB,SAAtB;AACAjB,QAAAA,OAAO,CAACQ,SAAR,CAAkBS,MAAlB,CAAyB,SAAzB;AACAhB,QAAAA,YAAY,CAACO,SAAb,CAAuBS,MAAvB,CAA8B,SAA9B;AACAf,QAAAA,WAAW,CAACQ,OAAZ,CAAoBC,IAAI,IAAIA,IAAI,CAACH,SAAL,CAAeS,MAAf,CAAsB,SAAtB,CAA5B,EALK,CASL;;AAEAZ,QAAAA,WAAW,GAAG,KAAd;AACD;AACF,KAjCD;AAkCG;;AAEDa,EAAAA,MAAM,GAAI;AACR,WACE,oBAAC,GAAD;AAAK,MAAA,UAAU,EAAE,KAAKxB,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAGD;;AA9DyB;;AAiE5B,eAAeL,GAAf","sourcesContent":["import React, { Component } from 'react'\nimport './App.css';\nimport Nav from './components/nav';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      display: true\n    }\n    this.animations = this.animations.bind(this);\n  }\n\n  animations () {\n    const menuButton = document.querySelector('.menu-btn');\nconst menu = document.querySelector('.menu');\nconst menuNav = document.querySelector('.menu-nav');\nconst menuBranding = document.querySelector('.menu-branding');\nconst navNodelist = document.querySelectorAll('.menu-item');\nconst links = document.querySelectorAll('.nav-link');\n// Menu -- initial state\n\nlet displayMenu = false;\n\n\n\nmenuButton.addEventListener('click', function toggleMenu () {\n  if (!displayMenu) {\n    menuButton.classList.add('close');\n    menu.classList.add('display');\n    menuNav.classList.add('display');\n    menuBranding.classList.add('display');\n    navNodelist.forEach(item => {\n      item.classList.add('display');\n  });\n    links.forEach(link => {\n      link.onmouseover = () => link.textContent = `{${link.textContent}}`;\n      link.onmouseout = () => {\n        link.textContent = link.textContent.slice(1, -1);\n      };\n    });\n   \n\n    // set state of menu\n\n    displayMenu = true;\n  } else {\n    menuButton.classList.remove('close');\n    menu.classList.remove('display');\n    menuNav.classList.remove('display');\n    menuBranding.classList.remove('display');\n    navNodelist.forEach(item => item.classList.remove('display'));\n\n    \n\n    // set state of menu\n\n    displayMenu = false;\n  }\n});\n  }\n\n  render () {\n    return (\n      <Nav animations={this.animations}/>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}